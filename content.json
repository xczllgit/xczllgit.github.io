[{"title":"java虚拟机垃圾回收","date":"2020-03-25T09:51:13.000Z","path":"2020/03/25/jvm/2020-03-25-jvmGarbageCollection/","tags":[{"name":"java虚拟机","slug":"java虚拟机","permalink":"https://xczllgit.github.io/tags/java%E8%99%9A%E6%8B%9F%E6%9C%BA/"}]},{"title":"设计模式之观察者模式","date":"2020-03-25T09:11:42.000Z","path":"2020/03/25/designPattern/2020-03-25-observerPattern/","tags":[{"name":"设计模式","slug":"设计模式","permalink":"https://xczllgit.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"}]},{"title":"计算机网络之应用层FTP协议","date":"2020-03-24T06:59:47.000Z","path":"2020/03/24/computerscience/2020-03-24-applicationFTP/","tags":[{"name":"计算机网络","slug":"计算机网络","permalink":"https://xczllgit.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"}]},{"title":"jvm中的java对象","date":"2020-03-24T05:24:59.000Z","path":"2020/03/24/jvm/2020-03-24-jvmObjectDistribution/","tags":[{"name":"java虚拟机","slug":"java虚拟机","permalink":"https://xczllgit.github.io/tags/java%E8%99%9A%E6%8B%9F%E6%9C%BA/"}]},{"title":"设计模式之解释器模式","date":"2020-03-24T02:47:49.000Z","path":"2020/03/24/designPattern/2020-03-24-interpreterPattern/","tags":[{"name":"设计模式","slug":"设计模式","permalink":"https://xczllgit.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"}]},{"title":"计算机网络之应用层Http协议","date":"2020-03-23T07:50:39.000Z","path":"2020/03/23/computerscience/2020-03-23-applicationProtocol/","tags":[{"name":"计算机网络","slug":"计算机网络","permalink":"https://xczllgit.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"}]},{"title":"java虚拟机内存结构","date":"2020-03-23T04:15:36.000Z","path":"2020/03/23/jvm/2020-03-23-jvmMemoryRegion/","tags":[{"name":"java虚拟机","slug":"java虚拟机","permalink":"https://xczllgit.github.io/tags/java%E8%99%9A%E6%8B%9F%E6%9C%BA/"}]},{"title":"java虚拟机介绍","date":"2020-03-23T01:53:36.000Z","path":"2020/03/23/jvm/2020-03-23-jvmIntroduction/","tags":[{"name":"java虚拟机","slug":"java虚拟机","permalink":"https://xczllgit.github.io/tags/java%E8%99%9A%E6%8B%9F%E6%9C%BA/"}]},{"title":"设计模式之策略模式","date":"2020-03-23T01:15:55.000Z","path":"2020/03/23/designPattern/2020-03-23-strategyPattern/","tags":[{"name":"设计模式","slug":"设计模式","permalink":"https://xczllgit.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"}]},{"title":"计算机网络之应用层协议原理","date":"2020-03-22T01:50:57.000Z","path":"2020/03/22/computerscience/2020-03-22-applicationLayerProtocolPrinciple/","tags":[{"name":"计算机网络","slug":"计算机网络","permalink":"https://xczllgit.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"}]},{"title":"设计模式之迭代器模式","date":"2020-03-22T00:41:06.000Z","path":"2020/03/22/designPattern/2020-03-22-iteratorPattern/","tags":[{"name":"设计模式","slug":"设计模式","permalink":"https://xczllgit.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"}]},{"title":"OSI与TCP-IP参考模型","date":"2020-03-21T01:43:30.000Z","path":"2020/03/21/computerscience/2020-03-21-osiAndTcpIpModel/","tags":[{"name":"计算机网络","slug":"计算机网络","permalink":"https://xczllgit.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"}]},{"title":"设计模式之模板模式","date":"2020-03-21T01:11:56.000Z","path":"2020/03/21/designPattern/2020-03-21-templatePattern/","tags":[{"name":"设计模式","slug":"设计模式","permalink":"https://xczllgit.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"}]},{"title":"计算机网络性能指标","date":"2020-03-20T11:17:31.000Z","path":"2020/03/20/computerscience/2020-03-20-networkIndexOfPerformance/","tags":[{"name":"计算机网络","slug":"计算机网络","permalink":"https://xczllgit.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"}]},{"title":"计算机网络概述","date":"2020-03-20T10:49:59.000Z","path":"2020/03/20/computerscience/2020-03-20-computerNetworkOverview/","tags":[{"name":"计算机网络","slug":"计算机网络","permalink":"https://xczllgit.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"}]},{"title":"设计模式之代理模式","date":"2020-03-20T07:31:32.000Z","path":"2020/03/20/designPattern/2020-03-20-proxyPattern/","tags":[{"name":"设计模式","slug":"设计模式","permalink":"https://xczllgit.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"}]},{"title":"设计模式之桥接模式","date":"2020-03-19T13:27:09.000Z","path":"2020/03/19/designPattern/2020-03-19-bridgePattern/","tags":[{"name":"设计模式","slug":"设计模式","permalink":"https://xczllgit.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"}]},{"title":"java并发之线程停止、中断之最佳实践","date":"2020-03-19T11:51:34.000Z","path":"2020/03/19/concurrent/2020-03-19-threadDeadLock/","tags":[{"name":"java并发","slug":"java并发","permalink":"https://xczllgit.github.io/tags/java%E5%B9%B6%E5%8F%91/"}]},{"title":"设计模式之组合模式","date":"2020-03-17T14:46:18.000Z","path":"2020/03/17/designPattern/2020-03-17-compositePattern/","tags":[{"name":"设计模式","slug":"设计模式","permalink":"https://xczllgit.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"}]},{"title":"java并发之Java内存模型","date":"2020-03-17T13:45:23.000Z","path":"2020/03/17/concurrent/2020-03-17-javaMemoryModel/","tags":[{"name":"java并发","slug":"java并发","permalink":"https://xczllgit.github.io/tags/java%E5%B9%B6%E5%8F%91/"}]},{"title":"java并发之线程安全","date":"2020-03-16T12:25:00.000Z","path":"2020/03/16/concurrent/2020-03-16-threadSecurity/","tags":[{"name":"java并发","slug":"java并发","permalink":"https://xczllgit.github.io/tags/java%E5%B9%B6%E5%8F%91/"}]},{"title":"设计模式之享元模式","date":"2020-03-16T11:39:18.000Z","path":"2020/03/16/designPattern/2020-03-16-flyWeightPattern/","tags":[{"name":"设计模式","slug":"设计模式","permalink":"https://xczllgit.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"}]},{"title":"设计模式之适配器模式","date":"2020-03-15T13:36:18.000Z","path":"2020/03/15/designPattern/2020-03-15-adapterPattern/","tags":[{"name":"设计模式","slug":"设计模式","permalink":"https://xczllgit.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"}]},{"title":"java并发之线程属性","date":"2020-03-15T12:17:34.000Z","path":"2020/03/15/concurrent/2020-03-15-threadAttribute/","tags":[{"name":"java并发","slug":"java并发","permalink":"https://xczllgit.github.io/tags/java%E5%B9%B6%E5%8F%91/"}]},{"title":"java并发之异常处理","date":"2020-03-15T11:13:14.000Z","path":"2020/03/15/concurrent/2020-03-15-threadException/","tags":[{"name":"java并发","slug":"java并发","permalink":"https://xczllgit.github.io/tags/java%E5%B9%B6%E5%8F%91/"}]},{"title":"Hello World","date":"2020-03-15T09:44:18.000Z","path":"2020/03/15/hello-world/","tags":[{"name":"介绍","slug":"介绍","permalink":"https://xczllgit.github.io/tags/%E4%BB%8B%E7%BB%8D/"}]},{"title":"设计模式之UML类图","date":"2020-03-14T14:54:18.000Z","path":"2020/03/14/designPattern/2020-03-14-decoratorPattern/","tags":[{"name":"设计模式","slug":"设计模式","permalink":"https://xczllgit.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"}]},{"title":"java并发之Thread和Object类中线程相关方法","date":"2020-03-14T14:25:00.000Z","path":"2020/03/14/concurrent/2020-03-14-threadMethods/","tags":[{"name":"java并发","slug":"java并发","permalink":"https://xczllgit.github.io/tags/java%E5%B9%B6%E5%8F%91/"}]},{"title":"设计模式之外观模式","date":"2020-03-14T13:14:18.000Z","path":"2020/03/14/designPattern/2020-03-14-appearancePattern/","tags":[{"name":"设计模式","slug":"设计模式","permalink":"https://xczllgit.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"}]},{"title":"java并发之线程的状态","date":"2020-03-12T12:25:00.000Z","path":"2020/03/12/concurrent/2020-03-12-threadStatus/","tags":[{"name":"java并发","slug":"java并发","permalink":"https://xczllgit.github.io/tags/java%E5%B9%B6%E5%8F%91/"}]},{"title":"java并发之停止线程的正确和错误方式","date":"2020-03-11T12:50:00.000Z","path":"2020/03/11/concurrent/2020-03-11-stopThread/","tags":[{"name":"java并发","slug":"java并发","permalink":"https://xczllgit.github.io/tags/java%E5%B9%B6%E5%8F%91/"}]},{"title":"java并发之启动线程的正确和错误方式","date":"2020-03-10T13:09:00.000Z","path":"2020/03/10/concurrent/2020-03-10-startThread/","tags":[{"name":"java并发","slug":"java并发","permalink":"https://xczllgit.github.io/tags/java%E5%B9%B6%E5%8F%91/"}]},{"title":"设计模式之原型模式","date":"2020-03-09T13:34:18.000Z","path":"2020/03/09/designPattern/2020-03-09-ProtypePattern/","tags":[{"name":"设计模式","slug":"设计模式","permalink":"https://xczllgit.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"}]},{"title":"java并发之实现多线程的方法","date":"2020-03-09T02:14:00.000Z","path":"2020/03/09/concurrent/2020-03-09-multiThread-build/","tags":[{"name":"java并发","slug":"java并发","permalink":"https://xczllgit.github.io/tags/java%E5%B9%B6%E5%8F%91/"}]},{"title":"设计模式之单例模式","date":"2020-03-07T14:44:18.000Z","path":"2020/03/07/designPattern/2020-03-07-sigletonPattern/","tags":[{"name":"设计模式","slug":"设计模式","permalink":"https://xczllgit.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"}]},{"title":"设计模式之建造者模式","date":"2020-03-07T13:24:18.000Z","path":"2020/03/07/designPattern/2020-03-07-builder/","tags":[{"name":"设计模式","slug":"设计模式","permalink":"https://xczllgit.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"}]},{"title":"设计模式之抽象工厂","date":"2020-03-07T12:44:18.000Z","path":"2020/03/07/designPattern/2020-03-07-abstractFactory/","tags":[{"name":"设计模式","slug":"设计模式","permalink":"https://xczllgit.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"}]},{"title":"设计模式之工厂方法","date":"2020-03-07T09:44:18.000Z","path":"2020/03/07/designPattern/2020-03-07-factoryMethod/","tags":[{"name":"设计模式","slug":"设计模式","permalink":"https://xczllgit.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"}]},{"title":"设计模式之三大分类","date":"2020-03-06T12:34:18.000Z","path":"2020/03/06/designPattern/2020-03-06-designPatternCategories/","tags":[{"name":"设计模式","slug":"设计模式","permalink":"https://xczllgit.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"}]},{"title":"设计模式之简单工厂模式","date":"2020-03-06T11:25:18.000Z","path":"2020/03/06/designPattern/2020-03-06-simpleFactory/","tags":[{"name":"设计模式","slug":"设计模式","permalink":"https://xczllgit.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"}]},{"title":"设计模式之六大原则","date":"2020-03-05T10:44:18.000Z","path":"2020/03/05/designPattern/2020-03-05-designPrinciple/","tags":[{"name":"设计模式","slug":"设计模式","permalink":"https://xczllgit.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"}]},{"title":"设计模式之UML类图","date":"2020-03-04T09:44:18.000Z","path":"2020/03/04/designPattern/2020-03-04-designPattern-UML/","tags":[{"name":"设计模式","slug":"设计模式","permalink":"https://xczllgit.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"}]}]